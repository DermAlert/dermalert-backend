{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"DermAlert Backend","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do DermAlert Backend - um sistema backend robusto para diagn\u00f3stico dermatol\u00f3gico assistido por IA.</p>"},{"location":"#sobre-o-projeto","title":"\ud83c\udfaf Sobre o Projeto","text":"<p>O DermAlert \u00e9 uma plataforma que utiliza intelig\u00eancia artificial para auxiliar no diagn\u00f3stico de condi\u00e7\u00f5es dermatol\u00f3gicas, proporcionando:</p> <ul> <li>An\u00e1lise de imagens dermatol\u00f3gicas com IA</li> <li>Gest\u00e3o de pacientes e hist\u00f3rico m\u00e9dico</li> <li>Sistema de consultas online e presenciais</li> <li>Cat\u00e1logos m\u00e9dicos completos (doen\u00e7as, medicamentos, alergias)</li> <li>Integra\u00e7\u00e3o com unidades de sa\u00fade</li> </ul>"},{"location":"#arquitetura","title":"\ud83c\udfd7\ufe0f Arquitetura","text":"<p>O projeto \u00e9 constru\u00eddo com:</p> <ul> <li>Django REST Framework - API robusta e escal\u00e1vel</li> <li>PostgreSQL - Banco de dados principal</li> <li>MinIO - Armazenamento de objetos (imagens)</li> <li>Docker - Containeriza\u00e7\u00e3o para desenvolvimento e produ\u00e7\u00e3o</li> <li>uv - Gerenciamento de depend\u00eancias Python moderno</li> </ul>"},{"location":"#guias-rapidos","title":"\ud83d\udcda Guias R\u00e1pidos","text":""},{"location":"#primeiros-passos","title":"Primeiros Passos","text":"<ol> <li>Configura\u00e7\u00e3o do PostgreSQL</li> <li>Configura\u00e7\u00e3o do MinIO</li> <li>Ambiente de Desenvolvimento</li> <li>Guia R\u00e1pido de Seeds</li> </ol>"},{"location":"#para-desenvolvedores","title":"Para Desenvolvedores","text":"<ul> <li>Arquitetura do Sistema</li> <li>Executar Testes</li> <li>Refer\u00eancia da API</li> </ul>"},{"location":"#inicio-rapido","title":"\ud83d\ude80 In\u00edcio R\u00e1pido","text":"<pre><code># 1. Clonar o reposit\u00f3rio\ngit clone https://github.com/DermAlert/dermalert-backend\ncd dermalert-backend\n\n# 2. Subir servi\u00e7os - Terminal 1\nmake dev\n\n# 3. Configurar banco de dados - Terminal 2\nmake setup-db\n\n# 4. Popular com dados de teste - Terminal 2\nmake seed\n</code></pre>"},{"location":"#comandos-principais","title":"\ud83d\udee0\ufe0f Comandos Principais","text":"Comando Descri\u00e7\u00e3o <code>make dev</code> Subir ambiente de desenvolvimento <code>make setup-db</code> Configurar banco de dados <code>make seed</code> Popular com dados de teste <code>make test</code> Executar testes <code>make shell</code> Django shell"},{"location":"#estrutura-da-documentacao","title":"\ud83d\udcd6 Estrutura da Documenta\u00e7\u00e3o","text":"<ul> <li>PostgreSQL - Configura\u00e7\u00e3o do banco de dados</li> <li>MinIO - Configura\u00e7\u00e3o do armazenamento de objetos</li> <li>Seeds - Sistema de dados de teste</li> <li>API - Documenta\u00e7\u00e3o das APIs</li> <li>Desenvolvimento - Guias para desenvolvedores</li> </ul>"},{"location":"#contribuindo","title":"\ud83e\udd1d Contribuindo","text":"<ol> <li>Fork o projeto</li> <li>Crie uma branch para sua feature (<code>git checkout -b feature/AmazingFeature</code>)</li> <li>Commit suas mudan\u00e7as (<code>git commit -m 'Add some AmazingFeature'</code>)</li> <li>Push para a branch (<code>git push origin feature/AmazingFeature</code>)</li> <li>Abra um Pull Request</li> </ol>"},{"location":"#licenca","title":"\ud83d\udcdd Licen\u00e7a","text":"<p>Este projeto est\u00e1 sob a licen\u00e7a MIT. Veja o arquivo <code>LICENSE</code> para mais detalhes.</p>"},{"location":"api/accounts/","title":"API - Accounts","text":"<p>Documenta\u00e7\u00e3o da API de contas de usu\u00e1rio do DermAlert Backend.</p>"},{"location":"api/accounts/#endpoints","title":"Endpoints","text":""},{"location":"api/accounts/#usuarios","title":"Usu\u00e1rios","text":""},{"location":"api/accounts/#get-apiaccountsusers","title":"GET /api/accounts/users/","text":"<p>Lista todos os usu\u00e1rios</p>"},{"location":"api/accounts/#post-apiaccountsusers","title":"POST /api/accounts/users/","text":"<p>Cria um novo usu\u00e1rio</p>"},{"location":"api/accounts/#get-apiaccountsusersid","title":"GET /api/accounts/users/{id}/","text":"<p>Obt\u00e9m detalhes de um usu\u00e1rio espec\u00edfico</p>"},{"location":"api/accounts/#put-apiaccountsusersid","title":"PUT /api/accounts/users/{id}/","text":"<p>Atualiza um usu\u00e1rio existente</p>"},{"location":"api/accounts/#delete-apiaccountsusersid","title":"DELETE /api/accounts/users/{id}/","text":"<p>Remove um usu\u00e1rio</p>"},{"location":"api/accounts/#autenticacao","title":"Autentica\u00e7\u00e3o","text":""},{"location":"api/accounts/#post-apiaccountsauthlogin","title":"POST /api/accounts/auth/login/","text":"<p>Realiza login do usu\u00e1rio</p>"},{"location":"api/accounts/#post-apiaccountsauthlogout","title":"POST /api/accounts/auth/logout/","text":"<p>Realiza logout do usu\u00e1rio</p>"},{"location":"api/accounts/#post-apiaccountsauthregister","title":"POST /api/accounts/auth/register/","text":"<p>Registra um novo usu\u00e1rio</p>"},{"location":"api/accounts/#modelos","title":"Modelos","text":""},{"location":"api/accounts/#user","title":"User","text":"<ul> <li>id: UUID</li> <li>email: EmailField</li> <li>first_name: CharField</li> <li>last_name: CharField</li> <li>is_active: BooleanField</li> <li>date_joined: DateTimeField</li> </ul>"},{"location":"api/accounts/#permissoes","title":"Permiss\u00f5es","text":"<ul> <li>Usu\u00e1rios autenticados podem visualizar pr\u00f3prio perfil</li> <li>Administradores podem gerenciar todos os usu\u00e1rios</li> </ul>"},{"location":"api/addresses/","title":"API - Endere\u00e7os","text":"<p>Documenta\u00e7\u00e3o da API de endere\u00e7os do DermAlert Backend.</p>"},{"location":"api/addresses/#endpoints","title":"Endpoints","text":""},{"location":"api/addresses/#enderecos","title":"Endere\u00e7os","text":""},{"location":"api/addresses/#get-apiaddresses","title":"GET /api/addresses/","text":"<p>Lista todos os endere\u00e7os</p>"},{"location":"api/addresses/#post-apiaddresses","title":"POST /api/addresses/","text":"<p>Cria um novo endere\u00e7o</p>"},{"location":"api/addresses/#get-apiaddressesid","title":"GET /api/addresses/{id}/","text":"<p>Obt\u00e9m detalhes de um endere\u00e7o espec\u00edfico</p>"},{"location":"api/addresses/#put-apiaddressesid","title":"PUT /api/addresses/{id}/","text":"<p>Atualiza um endere\u00e7o existente</p>"},{"location":"api/addresses/#delete-apiaddressesid","title":"DELETE /api/addresses/{id}/","text":"<p>Remove um endere\u00e7o</p>"},{"location":"api/addresses/#modelos","title":"Modelos","text":""},{"location":"api/addresses/#address","title":"Address","text":"<ul> <li>id: UUID</li> <li>street: CharField</li> <li>number: CharField</li> <li>complement: CharField (opcional)</li> <li>neighborhood: CharField</li> <li>city: CharField</li> <li>state: CharField</li> <li>postal_code: CharField</li> <li>country: CharField</li> <li>latitude: DecimalField (opcional)</li> <li>longitude: DecimalField (opcional)</li> </ul>"},{"location":"api/addresses/#filtros-disponiveis","title":"Filtros Dispon\u00edveis","text":"<ul> <li>Por cidade</li> <li>Por estado</li> <li>Por CEP</li> <li>Por bairro</li> </ul>"},{"location":"api/addresses/#validacoes","title":"Valida\u00e7\u00f5es","text":"<ul> <li>CEP deve seguir formato brasileiro (XXXXX-XXX)</li> <li>Estado deve ser uma sigla v\u00e1lida</li> <li>Coordenadas geogr\u00e1ficas devem estar em formato decimal</li> </ul>"},{"location":"api/addresses/#permissoes","title":"Permiss\u00f5es","text":"<ul> <li>Leitura: Usu\u00e1rios autenticados</li> <li>Escrita: Administradores e usu\u00e1rios propriet\u00e1rios</li> </ul>"},{"location":"api/health-units/","title":"API - Health Units","text":"<p>Documenta\u00e7\u00e3o da API de unidades de sa\u00fade do DermAlert Backend.</p>"},{"location":"api/health-units/#endpoints","title":"Endpoints","text":""},{"location":"api/health-units/#unidades-de-saude","title":"Unidades de Sa\u00fade","text":""},{"location":"api/health-units/#get-apihealth-units","title":"GET /api/health-units/","text":"<p>Lista todas as unidades de sa\u00fade</p>"},{"location":"api/health-units/#post-apihealth-units","title":"POST /api/health-units/","text":"<p>Cria uma nova unidade de sa\u00fade</p>"},{"location":"api/health-units/#get-apihealth-unitsid","title":"GET /api/health-units/{id}/","text":"<p>Obt\u00e9m detalhes de uma unidade espec\u00edfica</p>"},{"location":"api/health-units/#put-apihealth-unitsid","title":"PUT /api/health-units/{id}/","text":"<p>Atualiza uma unidade existente</p>"},{"location":"api/health-units/#delete-apihealth-unitsid","title":"DELETE /api/health-units/{id}/","text":"<p>Remove uma unidade de sa\u00fade</p>"},{"location":"api/health-units/#modelos","title":"Modelos","text":""},{"location":"api/health-units/#healthunit","title":"HealthUnit","text":"<ul> <li>id: UUID</li> <li>name: CharField</li> <li>description: TextField</li> <li>address: ForeignKey(Address)</li> <li>phone: CharField</li> <li>email: EmailField</li> <li>is_active: BooleanField</li> <li>created_at: DateTimeField</li> </ul>"},{"location":"api/health-units/#filtros-disponiveis","title":"Filtros Dispon\u00edveis","text":"<ul> <li>Por nome</li> <li>Por cidade</li> <li>Por estado</li> <li>Por status (ativo/inativo)</li> </ul>"},{"location":"api/health-units/#permissoes","title":"Permiss\u00f5es","text":"<ul> <li>Leitura: Usu\u00e1rios autenticados</li> <li>Escrita: Administradores e gestores de sa\u00fade</li> </ul>"},{"location":"development/architecture/","title":"Arquitetura","text":"<p>Este documento descreve a arquitetura do DermAlert Backend.</p>"},{"location":"development/architecture/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O DermAlert Backend \u00e9 uma aplica\u00e7\u00e3o Django REST Framework que fornece APIs para um sistema de diagn\u00f3stico dermatol\u00f3gico com IA.</p>"},{"location":"development/architecture/#componentes-principais","title":"Componentes Principais","text":""},{"location":"development/architecture/#apps-django","title":"Apps Django","text":"<ol> <li>accounts - Gerenciamento de usu\u00e1rios e autentica\u00e7\u00e3o</li> <li>address - Gerenciamento de endere\u00e7os</li> <li>health_unit - Gerenciamento de unidades de sa\u00fade</li> <li>consultations - Gerenciamento de consultas</li> <li>ml - Integra\u00e7\u00e3o com modelos de machine learning</li> <li>skin_conditions - Condi\u00e7\u00f5es dermatol\u00f3gicas</li> <li>skin_forms - Formul\u00e1rios de avalia\u00e7\u00e3o</li> <li>profile_forms - Formul\u00e1rios de perfil</li> </ol>"},{"location":"development/architecture/#banco-de-dados","title":"Banco de Dados","text":"<ul> <li>PostgreSQL - Banco principal</li> <li>Redis (planejado) - Cache e filas</li> </ul>"},{"location":"development/architecture/#infraestrutura","title":"Infraestrutura","text":"<ul> <li>Docker - Containeriza\u00e7\u00e3o</li> <li>nginx - Proxy reverso</li> <li>Gunicorn - Servidor WSGI</li> </ul>"},{"location":"development/architecture/#padroes-arquiteturais","title":"Padr\u00f5es Arquiteturais","text":""},{"location":"development/architecture/#drf-django-rest-framework","title":"DRF (Django REST Framework)","text":"<ul> <li>ViewSets para endpoints CRUD</li> <li>Serializers para valida\u00e7\u00e3o e transforma\u00e7\u00e3o</li> <li>Permissions para controle de acesso</li> </ul>"},{"location":"development/architecture/#estrutura-de-apps","title":"Estrutura de Apps","text":"<pre><code>app/\n\u251c\u2500\u2500 models/\n\u251c\u2500\u2500 serializers/\n\u251c\u2500\u2500 views/\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 migrations/\n\u2514\u2500\u2500 management/commands/\n</code></pre>"},{"location":"development/architecture/#integracao-com-ia","title":"Integra\u00e7\u00e3o com IA","text":"<p>O m\u00f3dulo <code>ml</code> gerencia: - Processamento de imagens - Comunica\u00e7\u00e3o com modelos de IA - Armazenamento de resultados</p>"},{"location":"seeds/commands-reference/","title":"Commands Reference","text":"<p>Este documento lista todos os comandos dispon\u00edveis para gerenciar seeds no DermAlert Backend.</p>"},{"location":"seeds/commands-reference/#comandos-make","title":"Comandos Make","text":""},{"location":"seeds/commands-reference/#seeds-com-docker","title":"Seeds com Docker","text":"<ul> <li><code>make seed</code> - Executa todos os seeds</li> <li><code>make seed-clear</code> - Limpa e recria todos os seeds</li> <li><code>make seed-list</code> - Lista todos os seeds dispon\u00edveis</li> <li><code>make seed-basic</code> - Executa seeds b\u00e1sicos (endere\u00e7os e unidades de sa\u00fade)</li> <li><code>make seed-minimal</code> - Executa seeds m\u00ednimos com dados limitados</li> </ul>"},{"location":"seeds/commands-reference/#seeds-locais","title":"Seeds Locais","text":"<ul> <li><code>make seed-local</code> - Executa seeds localmente (sem Docker)</li> <li><code>make seed-local-clear</code> - Limpa e recria seeds localmente</li> <li><code>make seed-local-list</code> - Lista seeds dispon\u00edveis localmente</li> <li><code>make seed-local-minimal</code> - Executa seeds m\u00ednimos localmente</li> </ul>"},{"location":"seeds/commands-reference/#utilitarios","title":"Utilit\u00e1rios","text":"<ul> <li><code>make seed-setup</code> - Configura ambiente para seeds</li> <li><code>make seed-reset</code> - Reseta todos os dados</li> <li><code>make seed-status</code> - Verifica status dos seeds</li> </ul>"},{"location":"seeds/commands-reference/#comandos-django-diretos","title":"Comandos Django Diretos","text":"<pre><code>python manage.py seed_all\npython manage.py seed_all --clear\npython manage.py seed_all --list\npython manage.py seed_all --only seed_addresses seed_health_units\n</code></pre>"},{"location":"seeds/complete-guide/","title":"\ud83c\udf31 Sistema de Seeds Modularizado - DermAlert","text":"<p>Este projeto implementa um sistema de seeds modularizado que segue as melhores pr\u00e1ticas do Django, organizando cada responsabilidade em seu pr\u00f3prio app.</p>"},{"location":"seeds/complete-guide/#estrutura-modularizada","title":"\ud83d\udcc1 Estrutura Modularizada","text":""},{"location":"seeds/complete-guide/#apps-e-seus-seeds","title":"\ud83c\udfd7\ufe0f Apps e seus Seeds","text":"<pre><code>core/\n\u251c\u2500\u2500 seed_config.py          # Configura\u00e7\u00e3o central de todos os seeds\n\u251c\u2500\u2500 management/commands/\n    \u251c\u2500\u2500 base_seed.py        # Classe base para todos os seeds\n    \u2514\u2500\u2500 seed_all.py         # Comando principal que executa todos os seeds\n\naddress/\n\u251c\u2500\u2500 management/commands/\n    \u2514\u2500\u2500 seed_addresses.py   # \ud83d\udccd Seeds de endere\u00e7os brasileiros\n\nhealth_unit/\n\u251c\u2500\u2500 management/commands/\n    \u2514\u2500\u2500 seed_health_units.py # \ud83c\udfe5 Seeds de unidades de sa\u00fade\n\nprofile_forms/\n\u251c\u2500\u2500 management/commands/\n    \u2514\u2500\u2500 seed_health_catalogs.py # \ud83d\udccb Cat\u00e1logos de sa\u00fade\n\naccounts/\n\u251c\u2500\u2500 management/commands/\n    \u2514\u2500\u2500 seed_accounts.py    # \ud83d\udc65 Usu\u00e1rios, pacientes, trabalhos, sess\u00f5es\n</code></pre>"},{"location":"seeds/complete-guide/#comandos-disponiveis","title":"\ud83c\udfaf Comandos Dispon\u00edveis","text":""},{"location":"seeds/complete-guide/#1-seed_all-comando-principal","title":"1. <code>seed_all</code> - Comando Principal","text":"<p>Executa todos os seeds automaticamente na ordem correta, respeitando depend\u00eancias.</p> <pre><code># Seed completo\nuv run manage.py seed_all\n\n# Ver seeds dispon\u00edveis e ordem de execu\u00e7\u00e3o\nuv run manage.py seed_all --list\n\n# Limpar dados existentes e recriar\nuv run manage.py seed_all --clear\n\n# Executar apenas seeds espec\u00edficos (depend\u00eancias inclu\u00eddas automaticamente)\nuv run manage.py seed_all --only seed_addresses seed_health_units\n\n# Pular seeds espec\u00edficos\nuv run manage.py seed_all --skip seed_health_catalogs\n\n# Personalizar quantidades\nuv run manage.py seed_all --users 100 --addresses 80 --health-units 15\n</code></pre>"},{"location":"seeds/complete-guide/#2-seeds-individuais-por-app","title":"2. Seeds Individuais por App","text":""},{"location":"seeds/complete-guide/#enderecos-address-app","title":"\ud83d\udccd Endere\u00e7os (<code>address</code> app)","text":"<pre><code>uv run manage.py seed_addresses --count 50 --clear\n</code></pre>"},{"location":"seeds/complete-guide/#unidades-de-saude-health_unit-app","title":"\ud83c\udfe5 Unidades de Sa\u00fade (<code>health_unit</code> app)","text":"<pre><code>uv run manage.py seed_health_units --count 20 --clear\n</code></pre>"},{"location":"seeds/complete-guide/#catalogos-de-saude-profile_forms-app","title":"\ud83d\udccb Cat\u00e1logos de Sa\u00fade (<code>profile_forms</code> app)","text":"<pre><code>uv run manage.py seed_health_catalogs --clear\n</code></pre>"},{"location":"seeds/complete-guide/#accounts-accounts-app","title":"\ud83d\udc65 Accounts (<code>accounts</code> app)","text":"<pre><code>uv run manage.py seed_accounts --users 100 --patients 70 --works 50 --sessions 30 --clear\n</code></pre>"},{"location":"seeds/complete-guide/#sistema-de-dependencias","title":"\ud83d\udd17 Sistema de Depend\u00eancias","text":"<p>O sistema resolve depend\u00eancias automaticamente:</p> <pre><code>seed_addresses (sem depend\u00eancias)\n\u251c\u2500\u2500 seed_health_units (depende de addresses)\n\u2514\u2500\u2500 seed_accounts (depende de addresses + health_units)\n\nseed_health_catalogs (sem depend\u00eancias)\n</code></pre>"},{"location":"seeds/complete-guide/#configuracao-central","title":"\ud83d\udee0\ufe0f Configura\u00e7\u00e3o Central","text":""},{"location":"seeds/complete-guide/#coreseed_configpy","title":"<code>/core/seed_config.py</code>","text":"<p>Arquivo que centraliza toda a configura\u00e7\u00e3o dos seeds:</p> <pre><code>SEED_COMMANDS = {\n    'seed_addresses': {\n        'app': 'address',\n        'dependencies': [],\n        'description': 'Endere\u00e7os',\n        'priority': 10\n    },\n    'seed_health_units': {\n        'app': 'health_unit', \n        'dependencies': ['seed_addresses'],\n        'description': 'Unidades de sa\u00fade',\n        'priority': 20\n    },\n    # ...\n}\n</code></pre>"},{"location":"seeds/complete-guide/#classe-base","title":"\ud83c\udfd7\ufe0f Classe Base","text":""},{"location":"seeds/complete-guide/#coremanagementcommandsbase_seedpy","title":"<code>/core/management/commands/base_seed.py</code>","text":"<p>Todos os seeds herdam de <code>BaseSeedCommand</code> que fornece:</p> <ul> <li>\u2705 Seed determin\u00edstico baseado no SECRET_KEY</li> <li>\u2705 Configura\u00e7\u00e3o autom\u00e1tica do Faker (pt_BR)</li> <li>\u2705 Transa\u00e7\u00f5es autom\u00e1ticas</li> <li>\u2705 Tratamento de erros padronizado</li> <li>\u2705 Output formatado e colorido</li> <li>\u2705 Argumentos comuns (--clear)</li> </ul> <pre><code>class Command(BaseSeedCommand):\n    seed_name = \"meu_seed\"\n    seed_description = \"Descri\u00e7\u00e3o do seed\"\n\n    def handle_seed(self, fake, *args, **options):\n        # Implementar l\u00f3gica do seed\n        return {\"items_criados\": 10}\n\n    def _clear_data(self, options):\n        # Implementar limpeza (opcional)\n        pass\n</code></pre>"},{"location":"seeds/complete-guide/#uso-via-makefile","title":"\ud83d\udd27 Uso via Makefile","text":"<pre><code># Docker\nmake seed              # Seed completo\nmake seed-clear        # Com limpeza\nmake seed-list         # Listar seeds\nmake seed-basic        # Apenas dados b\u00e1sicos\n\n# Local\nmake seed-local        # Seed completo local\nmake seed-local-clear  # Com limpeza local\nmake seed-local-list   # Listar seeds local\n</code></pre>"},{"location":"seeds/complete-guide/#dados-gerados","title":"\ud83d\udcca Dados Gerados","text":""},{"location":"seeds/complete-guide/#enderecos-50-por-padrao","title":"\ud83d\udccd Endere\u00e7os (50 por padr\u00e3o)","text":"<ul> <li>CEPs brasileiros v\u00e1lidos</li> <li>Estados populosos (SP, RJ, MG, etc.)</li> <li>Coordenadas dentro do territ\u00f3rio brasileiro</li> <li>Endere\u00e7os \u00fanicos (CEP + n\u00famero)</li> </ul>"},{"location":"seeds/complete-guide/#unidades-de-saude-20-por-padrao","title":"\ud83c\udfe5 Unidades de Sa\u00fade (20 por padr\u00e3o)","text":"<ul> <li>Tipos realistas: UBS, ESF, AMA, CAPS, CEO, etc.</li> <li>Nomes institucionais brasileiros</li> <li>Emails governamentais (.gov.br, .sus.br)</li> <li>Vinculadas a endere\u00e7os \u00fanicos</li> </ul>"},{"location":"seeds/complete-guide/#catalogos-de-saude","title":"\ud83d\udccb Cat\u00e1logos de Sa\u00fade","text":"<ul> <li>40 Doen\u00e7as Cr\u00f4nicas (diabetes, hipertens\u00e3o, etc.)</li> <li>50 Medicamentos (paracetamol, insulina, etc.)</li> <li>30 Alergias (leite, amendoim, l\u00e1tex, etc.)</li> </ul>"},{"location":"seeds/complete-guide/#accounts-50-usuarios-por-padrao","title":"\ud83d\udc65 Accounts (50 usu\u00e1rios por padr\u00e3o)","text":"<ul> <li>Usu\u00e1rios: CPF v\u00e1lido, nomes brasileiros, emails opcionais</li> <li>Pacientes: N\u00famero SUS, telefones, g\u00eaneros, datas de nascimento</li> <li>Trabalhos: Relacionamentos usu\u00e1rio-unidade com per\u00edodos</li> <li>Sess\u00f5es: Hor\u00e1rios de trabalho realistas (6h-23h)</li> </ul>"},{"location":"seeds/complete-guide/#seed-deterministico","title":"\ud83c\udf31 Seed Determin\u00edstico","text":""},{"location":"seeds/complete-guide/#como-funciona","title":"Como Funciona","text":"<pre><code>seed_source = settings.SECRET_KEY[:32]\nseed_hash = hashlib.md5(seed_source.encode()).hexdigest()\nseed_int = int(seed_hash[:8], 16)\n</code></pre>"},{"location":"seeds/complete-guide/#vantagens","title":"Vantagens","text":"<ul> <li>\u2705 Reprodut\u00edvel: Mesmos dados sempre</li> <li>\u2705 Ambiente-espec\u00edfico: SECRET_KEY diferente = dados diferentes</li> <li>\u2705 Test\u00e1vel: Dados consistentes para testes</li> <li>\u2705 Debug\u00e1vel: Mesmo cen\u00e1rio sempre</li> </ul>"},{"location":"seeds/complete-guide/#alterando-os-dados","title":"Alterando os Dados","text":"<p>Para gerar dados diferentes, altere o SECRET_KEY: <pre><code>DJANGO_SECRET_KEY=nova-chave-para-dados-diferentes\n</code></pre></p>"},{"location":"seeds/complete-guide/#adicionando-novos-seeds","title":"\ud83d\ude80 Adicionando Novos Seeds","text":""},{"location":"seeds/complete-guide/#1-criar-comando-no-app-apropriado","title":"1. Criar comando no app apropriado","text":"<pre><code># meu_app/management/commands/seed_meu_modelo.py\nfrom core.management.commands.base_seed import BaseSeedCommand\n\nclass Command(BaseSeedCommand):\n    seed_name = \"meu_modelo\"\n    seed_description = \"Descri\u00e7\u00e3o do que faz\"\n\n    def handle_seed(self, fake, *args, **options):\n        # Implementar l\u00f3gica\n        return {\"criados\": 10}\n</code></pre>"},{"location":"seeds/complete-guide/#2-registrar-no-seed_configpy","title":"2. Registrar no seed_config.py","text":"<pre><code>SEED_COMMANDS = {\n    # ...seeds existentes...\n    'seed_meu_modelo': {\n        'app': 'meu_app',\n        'dependencies': ['seed_addresses'],  # se necess\u00e1rio\n        'description': 'Meu modelo',\n        'priority': 50\n    }\n}\n</code></pre>"},{"location":"seeds/complete-guide/#3-usar-automaticamente","title":"3. Usar automaticamente","text":"<pre><code>uv run manage.py seed_all  # Inclui o novo seed automaticamente\n</code></pre>"},{"location":"seeds/complete-guide/#uso-em-testes","title":"\ud83e\uddea Uso em Testes","text":"<pre><code># conftest.py\nimport pytest\nfrom django.core.management import call_command\n\n@pytest.fixture\ndef seeded_data():\n    call_command('seed_all', '--users', '10', '--addresses', '5')\n\ndef test_com_dados(seeded_data):\n    # Teste com dados seedados\n    pass\n</code></pre>"},{"location":"seeds/complete-guide/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"seeds/complete-guide/#comando-nao-encontrado","title":"\"Comando n\u00e3o encontrado\"","text":"<ul> <li>Verifique se o app est\u00e1 em <code>INSTALLED_APPS</code></li> <li>Confirme que <code>management/commands/</code> existe com <code>__init__.py</code></li> </ul>"},{"location":"seeds/complete-guide/#dependencia-nao-encontrada","title":"\"Depend\u00eancia n\u00e3o encontrada\"","text":"<pre><code>python manage.py seed_all --list  # Ver ordem de execu\u00e7\u00e3o\npython manage.py seed_addresses  # Executar depend\u00eancia primeiro\n</code></pre>"},{"location":"seeds/complete-guide/#dados-sempre-iguais","title":"\"Dados sempre iguais\"","text":"<ul> <li>Isso \u00e9 esperado! Para dados diferentes, altere o SECRET_KEY</li> </ul>"},{"location":"seeds/complete-guide/#performance-lenta","title":"Performance lenta","text":"<ul> <li>Use quantidades menores: <code>--users 10 --addresses 5</code></li> <li>Execute seeds individuais conforme necess\u00e1rio</li> </ul>"},{"location":"seeds/complete-guide/#boas-praticas","title":"\ud83d\udca1 Boas Pr\u00e1ticas","text":""},{"location":"seeds/complete-guide/#faca","title":"\u2705 Fa\u00e7a","text":"<ul> <li>Herde sempre de <code>BaseSeedCommand</code></li> <li>Use depend\u00eancias para ordem correta</li> <li>Implemente <code>_clear_data</code> se suportar limpeza</li> <li>Trate erros graciosamente</li> <li>Use bulk_create para performance</li> </ul>"},{"location":"seeds/complete-guide/#evite","title":"\u274c Evite","text":"<ul> <li>Seeds em produ\u00e7\u00e3o sem cuidado extremo</li> <li>Depend\u00eancias circulares</li> <li>Hardcoding de IDs ou PKs</li> <li>Seeds muito lentos (use quantidades razo\u00e1veis)</li> </ul>"},{"location":"seeds/quick-guide/","title":"\ud83d\ude80 Guia Pr\u00e1tico de Seeds - DermAlert","text":"<p>Este \u00e9 um guia r\u00e1pido com exemplos pr\u00e1ticos para usar o sistema de seeds modularizado.</p>"},{"location":"seeds/quick-guide/#comandos-mais-usados","title":"\u26a1 Comandos Mais Usados","text":""},{"location":"seeds/quick-guide/#desenvolvimento-diario","title":"Desenvolvimento Di\u00e1rio","text":"<pre><code># Setup inicial - executar uma vez\nuv run manage.py migrate\nuv run manage.py seed_all --users 20 --addresses 30 --health-units 5\n\n# Reset r\u00e1pido para testes\nuv run manage.py seed_all --clear --users 10 --addresses 15\n</code></pre>"},{"location":"seeds/quick-guide/#via-makefile-docker","title":"Via Makefile (Docker)","text":"<pre><code>make seed              # Seed completo\nmake seed-clear        # Com limpeza\nmake seed-list         # Ver seeds dispon\u00edveis\nmake seed-basic        # Apenas endere\u00e7os + unidades de sa\u00fade\n</code></pre>"},{"location":"seeds/quick-guide/#via-makefile-local","title":"Via Makefile (Local)","text":"<pre><code>make seed-local        # Seed completo local\nmake seed-local-clear  # Com limpeza local\n</code></pre>"},{"location":"seeds/quick-guide/#cenarios-especificos","title":"\ud83c\udfaf Cen\u00e1rios Espec\u00edficos","text":""},{"location":"seeds/quick-guide/#1-apenas-dados-basicos","title":"1. Apenas Dados B\u00e1sicos","text":"<pre><code># Para quando voc\u00ea s\u00f3 precisa de endere\u00e7os e unidades de sa\u00fade\nuv run manage.py seed_all --only seed_addresses seed_health_units\n\n# Ou especificando quantidades\nuv run manage.py seed_addresses --count 20\nuv run manage.py seed_health_units --count 5\n</code></pre>"},{"location":"seeds/quick-guide/#2-desenvolvimento-de-features-de-usuarios","title":"2. Desenvolvimento de Features de Usu\u00e1rios","text":"<pre><code># Foco em usu\u00e1rios e pacientes\nuv run manage.py seed_all --only seed_accounts --users 30\n</code></pre>"},{"location":"seeds/quick-guide/#3-testes-de-performance","title":"3. Testes de Performance","text":"<pre><code># Quantidades maiores para teste de performance\nuv run manage.py seed_all --users 500 --addresses 200 --health-units 50\n</code></pre>"},{"location":"seeds/quick-guide/#4-dados-minimos-para-testes","title":"4. Dados M\u00ednimos para Testes","text":"<pre><code># O m\u00ednimo necess\u00e1rio para funcionar\nuv run manage.py seed_all --users 5 --addresses 10 --health-units 2\n</code></pre>"},{"location":"seeds/quick-guide/#uso-em-testes","title":"\ud83e\uddea Uso em Testes","text":""},{"location":"seeds/quick-guide/#pytest-fixtures","title":"Pytest Fixtures","text":"<pre><code># conftest.py\nimport pytest\nfrom django.core.management import call_command\n\n@pytest.fixture\ndef minimal_data():\n    \"\"\"Dados m\u00ednimos para testes b\u00e1sicos\"\"\"\n    call_command('seed_addresses', '--count', '5')\n    call_command('seed_health_units', '--count', '2')\n\n@pytest.fixture\ndef full_accounts_data():\n    \"\"\"Dados completos do accounts para testes avan\u00e7ados\"\"\"\n    call_command('seed_all', '--users', '10', '--addresses', '8')\n\n@pytest.fixture\ndef health_catalogs():\n    \"\"\"Apenas cat\u00e1logos de sa\u00fade\"\"\"\n    call_command('seed_health_catalogs')\n</code></pre>"},{"location":"seeds/quick-guide/#uso-nos-testes","title":"Uso nos Testes","text":"<pre><code>def test_user_creation(minimal_data):\n    # Teste com dados m\u00ednimos\n    pass\n\ndef test_patient_workflow(full_accounts_data):\n    # Teste com dados completos\n    pass\n</code></pre>"},{"location":"seeds/quick-guide/#troubleshooting-rapido","title":"\ud83d\udd27 Troubleshooting R\u00e1pido","text":""},{"location":"seeds/quick-guide/#address-matching-query-does-not-exist","title":"\"Address matching query does not exist\"","text":"<pre><code># Executar primeiro os endere\u00e7os\nuv run manage.py seed_addresses --count 10\n</code></pre>"},{"location":"seeds/quick-guide/#no-health-units-available","title":"\"No Health Units available\"","text":"<pre><code># Executar na ordem correta\nuv run manage.py seed_addresses --count 10\nuv run manage.py seed_health_units --count 3\n</code></pre>"},{"location":"seeds/quick-guide/#dados-sempre-iguais","title":"Dados sempre iguais","text":"<pre><code># Normal! Para dados diferentes, altere o SECRET_KEY\nexport DJANGO_SECRET_KEY=\"nova-chave-para-dados-diferentes\"\nuv run manage.py seed_all\n</code></pre>"},{"location":"seeds/quick-guide/#performance-lenta","title":"Performance lenta","text":"<pre><code># Use quantidades menores\nuv run manage.py seed_all --users 10 --addresses 15 --health-units 3\n</code></pre>"},{"location":"seeds/quick-guide/#verificacao-rapida-de-dados","title":"\ud83d\udcca Verifica\u00e7\u00e3o R\u00e1pida de Dados","text":""},{"location":"seeds/quick-guide/#via-django-shell","title":"Via Django Shell","text":"<pre><code>uv run manage.py shell\n</code></pre> <pre><code># No shell\nfrom accounts.models import User, Patient, Work, Session\nfrom address.models import Address\nfrom health_unit.models import HealthUnit\nfrom profile_forms.models import ChronicDisease, Medicine, Allergy\n\n# Contadores\nprint(f\"\ud83d\udccd Endere\u00e7os: {Address.objects.count()}\")\nprint(f\"\ud83c\udfe5 Unidades de Sa\u00fade: {HealthUnit.objects.count()}\")\nprint(f\"\ud83d\udc65 Usu\u00e1rios: {User.objects.count()}\")\nprint(f\"\ud83c\udfe5 Pacientes: {Patient.objects.count()}\")\nprint(f\"\ud83d\udcbc Trabalhos: {Work.objects.count()}\")\nprint(f\"\u23f0 Sess\u00f5es: {Session.objects.count()}\")\nprint(f\"\ud83c\udfe5 Doen\u00e7as: {ChronicDisease.objects.count()}\")\nprint(f\"\ud83d\udc8a Medicamentos: {Medicine.objects.count()}\")\nprint(f\"\ud83e\udd27 Alergias: {Allergy.objects.count()}\")\n</code></pre>"},{"location":"seeds/quick-guide/#via-sql-direto","title":"Via SQL Direto","text":"<pre><code>uv run manage.py dbshell\n</code></pre> <pre><code>-- No dbshell\nSELECT 'Users' as table_name, COUNT(*) as count FROM accounts_user\nUNION ALL\nSELECT 'Patients', COUNT(*) FROM accounts_patient\nUNION ALL\nSELECT 'Addresses', COUNT(*) FROM address_address\nUNION ALL\nSELECT 'Health Units', COUNT(*) FROM health_unit_healthunit;\n</code></pre>"},{"location":"seeds/quick-guide/#personalizacao-avancada","title":"\ud83d\udee0\ufe0f Personaliza\u00e7\u00e3o Avan\u00e7ada","text":""},{"location":"seeds/quick-guide/#argumentos-por-seed","title":"Argumentos por Seed","text":"<pre><code># Endere\u00e7os\nuv run manage.py seed_addresses --count 100 --clear\n\n# Unidades de Sa\u00fade\nuv run manage.py seed_health_units --count 25 --clear\n\n# Accounts\nuv run manage.py seed_accounts --users 200 --patients 150 --works 100 --sessions 80 --clear\n\n# Cat\u00e1logos (sem argumentos personalizados)\nuv run manage.py seed_health_catalogs --clear\n</code></pre>"},{"location":"seeds/quick-guide/#combinacoes-uteis","title":"Combina\u00e7\u00f5es \u00dateis","text":"<pre><code># Reset completo com dados grandes\nuv run manage.py seed_all --clear --users 100 --addresses 80 --health-units 20\n\n# Apenas novos usu\u00e1rios (sem limpar existentes)\nuv run manage.py seed_accounts --users 50\n\n# Focar em dados m\u00e9dicos\nuv run manage.py seed_all --skip seed_accounts --clear\n</code></pre>"},{"location":"seeds/quick-guide/#resumo-dos-comandos-principais","title":"\ud83c\udfaf Resumo dos Comandos Principais","text":"Comando Uso Exemplo <code>seed_all</code> Tudo automaticamente <code>python manage.py seed_all</code> <code>seed_all --list</code> Ver seeds dispon\u00edveis <code>python manage.py seed_all --list</code> <code>seed_all --only</code> Seeds espec\u00edficos <code>python manage.py seed_all --only seed_addresses</code> <code>seed_all --clear</code> Limpar e recriar <code>python manage.py seed_all --clear</code> <code>seed_addresses</code> S\u00f3 endere\u00e7os <code>python manage.py seed_addresses --count 50</code> <code>seed_accounts</code> S\u00f3 accounts <code>python manage.py seed_accounts --users 100</code>"},{"location":"seeds/quick-guide/#dicas-finais","title":"\ud83d\udca1 Dicas Finais","text":"<ol> <li>Sempre execute <code>migrate</code> antes do seed</li> <li>Use quantidades pequenas durante desenvolvimento</li> <li>O seed \u00e9 determin\u00edstico - mesma SECRET_KEY = mesmos dados</li> <li>Seeds s\u00e3o seguros - n\u00e3o afetam superusu\u00e1rios</li> <li>Use <code>--clear</code> com cuidado - remove dados existentes</li> <li>Depend\u00eancias s\u00e3o resolvidas automaticamente</li> <li>Cada app gerencia seus pr\u00f3prios seeds</li> </ol>"},{"location":"seeds/technical-summary/","title":"\u2705 Sistema de Seeds Refatorado - Resumo Executivo","text":""},{"location":"seeds/technical-summary/#o-que-foi-implementado","title":"\ud83c\udfaf O que foi implementado","text":"<p>Refatorei completamente o sistema de seeds do projeto DermAlert seguindo as melhores pr\u00e1ticas do Django, organizando cada responsabilidade em seu pr\u00f3prio app e criando uma arquitetura modular e escal\u00e1vel.</p>"},{"location":"seeds/technical-summary/#arquitetura-nova","title":"\ud83c\udfd7\ufe0f Arquitetura Nova","text":""},{"location":"seeds/technical-summary/#separacao-por-responsabilidade","title":"Separa\u00e7\u00e3o por Responsabilidade","text":"<pre><code>\u251c\u2500\u2500 core/\n\u2502   \u251c\u2500\u2500 seed_config.py              # \u2699\ufe0f Configura\u00e7\u00e3o central\n\u2502   \u2514\u2500\u2500 management/commands/\n\u2502       \u251c\u2500\u2500 base_seed.py            # \ud83c\udfd7\ufe0f Classe base\n\u2502       \u2514\u2500\u2500 seed_all.py             # \ud83c\udfaf Comando principal\n\u251c\u2500\u2500 address/management/commands/\n\u2502   \u2514\u2500\u2500 seed_addresses.py           # \ud83d\udccd Endere\u00e7os brasileiros\n\u251c\u2500\u2500 health_unit/management/commands/\n\u2502   \u2514\u2500\u2500 seed_health_units.py        # \ud83c\udfe5 Unidades de sa\u00fade\n\u251c\u2500\u2500 profile_forms/management/commands/\n\u2502   \u2514\u2500\u2500 seed_health_catalogs.py     # \ud83d\udccb Cat\u00e1logos m\u00e9dicos\n\u2514\u2500\u2500 accounts/management/commands/\n    \u2514\u2500\u2500 seed_accounts.py            # \ud83d\udc65 Usu\u00e1rios e pacientes\n</code></pre>"},{"location":"seeds/technical-summary/#sistema-de-dependencias-automatico","title":"Sistema de Depend\u00eancias Autom\u00e1tico","text":"<ul> <li>\u2705 seed_addresses \u2192 sem depend\u00eancias</li> <li>\u2705 seed_health_units \u2192 depende de <code>addresses</code></li> <li>\u2705 seed_health_catalogs \u2192 sem depend\u00eancias  </li> <li>\u2705 seed_accounts \u2192 depende de <code>addresses</code> + <code>health_units</code></li> </ul>"},{"location":"seeds/technical-summary/#principais-melhorias","title":"\ud83c\udf1f Principais Melhorias","text":""},{"location":"seeds/technical-summary/#1-modularidade-total","title":"1. Modularidade Total","text":"<ul> <li>Cada app gerencia seus pr\u00f3prios seeds</li> <li>F\u00e1cil adi\u00e7\u00e3o de novos seeds</li> <li>Responsabilidades bem definidas</li> </ul>"},{"location":"seeds/technical-summary/#2-configuracao-centralizada","title":"2. Configura\u00e7\u00e3o Centralizada","text":"<ul> <li><code>/core/seed_config.py</code> controla tudo</li> <li>Ordem de execu\u00e7\u00e3o configur\u00e1vel</li> <li>Depend\u00eancias declarativas</li> </ul>"},{"location":"seeds/technical-summary/#3-classe-base-padronizada","title":"3. Classe Base Padronizada","text":"<ul> <li>Seed determin\u00edstico (baseado no SECRET_KEY)</li> <li>Faker configurado automaticamente (pt_BR)</li> <li>Transa\u00e7\u00f5es e tratamento de erros</li> <li>Output padronizado e colorido</li> </ul>"},{"location":"seeds/technical-summary/#4-resolucao-automatica-de-dependencias","title":"4. Resolu\u00e7\u00e3o Autom\u00e1tica de Depend\u00eancias","text":"<ul> <li>Executa na ordem correta automaticamente</li> <li>Inclui depend\u00eancias quando necess\u00e1rio</li> <li>Valida\u00e7\u00e3o de configura\u00e7\u00e3o</li> </ul>"},{"location":"seeds/technical-summary/#5-multiplas-interfaces-de-uso","title":"5. M\u00faltiplas Interfaces de Uso","text":"<ul> <li>Comandos Django nativos</li> <li>Makefile para Docker e local</li> <li>Script bash utilit\u00e1rio</li> <li>Integra\u00e7\u00e3o f\u00e1cil com CI/CD</li> </ul>"},{"location":"seeds/technical-summary/#como-usar","title":"\ud83d\ude80 Como usar","text":""},{"location":"seeds/technical-summary/#comandos-principais","title":"Comandos Principais","text":"<pre><code># Seed completo\nuv run manage.py seed_all\n\n# Ver seeds dispon\u00edveis\nuv run manage.py seed_all --list\n\n# Apenas seeds espec\u00edficos\nuv run manage.py seed_all --only seed_addresses seed_health_units\n\n# Personalizar quantidades\nuv run manage.py seed_all --users 100 --addresses 80\n\n# Via Makefile\nmake seed-setup        # Setup inicial\nmake seed-status       # Ver status atual\nmake seed-minimal      # Dados m\u00ednimos\n</code></pre>"},{"location":"seeds/technical-summary/#seeds-individuais","title":"Seeds Individuais","text":"<pre><code>uv run manage.py seed_addresses --count 50\nuv run manage.py seed_health_units --count 20\nuv run manage.py seed_health_catalogs\nuv run manage.py seed_accounts --users 100 --patients 70\n</code></pre>"},{"location":"seeds/technical-summary/#dados-gerados","title":"\ud83d\udcca Dados Gerados","text":""},{"location":"seeds/technical-summary/#enderecos-50-padrao","title":"\ud83d\udccd Endere\u00e7os (50 padr\u00e3o)","text":"<ul> <li>CEPs brasileiros v\u00e1lidos</li> <li>Estados populosos (SP, RJ, MG...)</li> <li>Coordenadas dentro do Brasil</li> <li>Endere\u00e7os \u00fanicos</li> </ul>"},{"location":"seeds/technical-summary/#unidades-de-saude-20-padrao","title":"\ud83c\udfe5 Unidades de Sa\u00fade (20 padr\u00e3o)","text":"<ul> <li>Tipos: UBS, ESF, AMA, CAPS, CEO...</li> <li>Nomes institucionais realistas</li> <li>Emails governamentais</li> <li>Vinculadas a endere\u00e7os \u00fanicos</li> </ul>"},{"location":"seeds/technical-summary/#catalogos-de-saude","title":"\ud83d\udccb Cat\u00e1logos de Sa\u00fade","text":"<ul> <li>40 Doen\u00e7as Cr\u00f4nicas (diabetes, hipertens\u00e3o...)</li> <li>50 Medicamentos (paracetamol, insulina...)</li> <li>30 Alergias (leite, amendoim, l\u00e1tex...)</li> </ul>"},{"location":"seeds/technical-summary/#accounts-50-usuarios-padrao","title":"\ud83d\udc65 Accounts (50 usu\u00e1rios padr\u00e3o)","text":"<ul> <li>CPF brasileiro v\u00e1lido</li> <li>Nomes brasileiros realistas</li> <li>Pacientes com n\u00famero SUS</li> <li>Trabalhos e sess\u00f5es realistas</li> </ul>"},{"location":"setup/development/","title":"Ambiente de Desenvolvimento","text":"<p>Este documento descreve como configurar o ambiente de desenvolvimento para o DermAlert Backend.</p>"},{"location":"setup/development/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Docker e Docker Compose</li> <li>Python 3.13+</li> <li>uv (Python package manager)</li> </ul>"},{"location":"setup/development/#configuracao","title":"Configura\u00e7\u00e3o","text":"<ol> <li>Clone o reposit\u00f3rio</li> <li>Execute <code>make dev</code> para iniciar o ambiente de desenvolvimento</li> <li>Execute <code>make setup-db</code> para configurar o banco de dados</li> </ol>"},{"location":"setup/development/#comandos-uteis","title":"Comandos \u00dateis","text":"<ul> <li><code>make dev</code> - Inicia o ambiente de desenvolvimento</li> <li><code>make test</code> - Executa os testes</li> <li><code>make lint</code> - Executa o linter</li> <li><code>make docs</code> - Inicia o servidor de documenta\u00e7\u00e3o</li> </ul>"},{"location":"setup/minio/","title":"Configura\u00e7\u00e3o MinIO - DermAlert Backend","text":"<p>Este documento explica como configurar e usar o MinIO (S3-compatible) para armazenamento de arquivos no projeto DermAlert.</p>"},{"location":"setup/minio/#inicio-rapido","title":"\ud83d\ude80 In\u00edcio R\u00e1pido","text":""},{"location":"setup/minio/#desenvolvimento","title":"Desenvolvimento","text":"<ol> <li> <p>Instalar depend\u00eancias: <pre><code>uv sync --group dev\n</code></pre></p> </li> <li> <p>Subir os servi\u00e7os (PostgreSQL + MinIO + Django): <pre><code>make dev\n</code></pre></p> </li> <li> <p>Configurar MinIO (em outro terminal): <pre><code>make setup-db\n</code></pre></p> </li> </ol>"},{"location":"setup/minio/#producao","title":"Produ\u00e7\u00e3o","text":"<ol> <li> <p>Configurar vari\u00e1veis de ambiente: <pre><code>cp .env.example .env\n# Editar .env com suas configura\u00e7\u00f5es de produ\u00e7\u00e3o\n</code></pre></p> </li> <li> <p>Subir os servi\u00e7os: <pre><code>make prod\n</code></pre></p> </li> </ol>"},{"location":"setup/minio/#servicos","title":"\ud83d\udce6 Servi\u00e7os","text":""},{"location":"setup/minio/#desenvolvimento-docker-composedevyml","title":"Desenvolvimento (<code>docker-compose.dev.yml</code>)","text":"<ul> <li>MinIO: <code>localhost:9000</code> (Console: <code>localhost:9090</code>)</li> <li>PostgreSQL: <code>localhost:5432</code></li> <li>Django: <code>localhost:8000</code></li> </ul>"},{"location":"setup/minio/#producao-docker-composeyml","title":"Produ\u00e7\u00e3o (<code>docker-compose.yml</code>)","text":"<ul> <li>MinIO: Interno (porta 9000)</li> <li>PostgreSQL: Interno (porta 5432)</li> <li>Django: Atrav\u00e9s do Nginx (porta 80/443)</li> <li>Nginx: <code>localhost:80</code> e <code>localhost:443</code></li> </ul>"},{"location":"setup/minio/#armazenamento-de-objetos","title":"\ud83d\uddc4\ufe0f Armazenamento de Objetos","text":""},{"location":"setup/minio/#configuracao-automatica","title":"Configura\u00e7\u00e3o Autom\u00e1tica","text":"<p>O projeto usa MinIO como alternativa local ao Amazon S3: - MinIO: Para desenvolvimento e produ\u00e7\u00e3o local - S3: Para produ\u00e7\u00e3o em nuvem (configura\u00e7\u00e3o opcional)</p>"},{"location":"setup/minio/#variaveis-de-ambiente","title":"Vari\u00e1veis de Ambiente","text":"<pre><code># MinIO Configuration\nUSE_S3=True\nAWS_ACCESS_KEY_ID=minioadmin\nAWS_SECRET_ACCESS_KEY=minioadmin\nAWS_STORAGE_BUCKET_NAME=dermalert\nAWS_S3_CUSTOM_DOMAIN=localhost:9000\nAWS_S3_ENDPOINT_URL=http://minio:9000\nAWS_S3_REGION_NAME=us-east-1\nAWS_S3_URL_PROTOCOL=http:\n</code></pre>"},{"location":"setup/minio/#comandos-uteis","title":"Comandos \u00dateis","text":"<pre><code># Configurar MinIO automaticamente\nmake setup-db\n\n# Configurar MinIO manualmente\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py setup_minio\n\n# Configurar MinIO com teste de upload\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py setup_minio --test-upload\n\n# Apenas criar bucket (sem pol\u00edtica)\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py setup_minio --skip-policy\n\n# Ver logs do MinIO\ndocker compose -f docker-compose.dev.yml logs minio\n\n# Acessar MinIO Console\n# Abrir http://localhost:9090 no navegador\n# Usu\u00e1rio: minioadmin / Senha: minioadmin\n</code></pre>"},{"location":"setup/minio/#comando-setup_minio","title":"\ud83d\udd27 Comando <code>setup_minio</code>","text":"<p>O comando personalizado <code>setup_minio</code> configura automaticamente o MinIO:</p>"},{"location":"setup/minio/#funcionalidades","title":"Funcionalidades","text":"<ol> <li>Verifica/Cria o bucket configurado em <code>AWS_STORAGE_BUCKET_NAME</code></li> <li>Aplica bucket-policy para leitura an\u00f4nima em <code>static/*</code></li> <li>Testa upload (opcional) para validar configura\u00e7\u00e3o</li> </ol>"},{"location":"setup/minio/#uso","title":"Uso","text":"<pre><code># Configura\u00e7\u00e3o completa\nuv run manage.py setup_minio\n\n# Pular configura\u00e7\u00e3o de pol\u00edtica\nuv run manage.py setup_minio --skip-policy\n\n# Incluir teste de upload\nuv run manage.py setup_minio --test-upload\n\n# Combinado\nuv run manage.py setup_minio --test-upload --skip-policy\n</code></pre>"},{"location":"setup/minio/#saida-do-comando","title":"Sa\u00edda do Comando","text":"<pre><code>Bucket alvo: dermalert\n\u2023 Verificando bucket\u2026 OK\n\u2023 Aplicando bucket-policy em static/*\u2026 OK\n\u2023 Enviando arquivo de teste\u2026 OK\n</code></pre>"},{"location":"setup/minio/#estrutura-do-bucket","title":"\ud83c\udfd7\ufe0f Estrutura do Bucket","text":"<pre><code>dermalert/\n\u251c\u2500\u2500 static/                 # Arquivos est\u00e1ticos (CSS, JS, imagens)\n\u2502   \u251c\u2500\u2500 admin/\n\u2502   \u251c\u2500\u2500 rest_framework/\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 media/                  # Uploads de usu\u00e1rios\n\u2502   \u251c\u2500\u2500 profile_images/\n\u2502   \u251c\u2500\u2500 skin_images/\n\u2502   \u2514\u2500\u2500 consent_forms/\n\u2514\u2500\u2500 test/                   # Arquivos de teste\n    \u2514\u2500\u2500 test_file.txt\n</code></pre>"},{"location":"setup/minio/#seguranca","title":"\ud83d\udd12 Seguran\u00e7a","text":""},{"location":"setup/minio/#desenvolvimento_1","title":"Desenvolvimento","text":"<ul> <li>Usar credenciais padr\u00e3o (<code>minioadmin</code>/<code>minioadmin</code>)</li> <li>MinIO exposto nas portas 9000 e 9090</li> <li>Pol\u00edtica de leitura an\u00f4nima em <code>static/*</code></li> </ul>"},{"location":"setup/minio/#producao_1","title":"Produ\u00e7\u00e3o","text":"<ul> <li>SEMPRE alterar credenciais padr\u00e3o</li> <li>MinIO n\u00e3o exposto externamente</li> <li>Configurar HTTPS no Nginx</li> <li>Usar senhas fortes e \u00fanicas</li> </ul>"},{"location":"setup/minio/#exemplo-de-senhas-fortes","title":"Exemplo de senhas fortes:","text":"<pre><code># Gerar senha aleat\u00f3ria\nopenssl rand -base64 32\n\n# Ou usar uuidgen\nuuidgen | tr '[:upper:]' '[:lower:]' | tr -d '-'\n</code></pre>"},{"location":"setup/minio/#politicas-de-bucket","title":"\ud83d\udccb Pol\u00edticas de Bucket","text":""},{"location":"setup/minio/#politica-padrao-static","title":"Pol\u00edtica Padr\u00e3o (static/*)","text":"<pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\"AWS\": [\"*\"]},\n      \"Action\": [\"s3:GetObject\"],\n      \"Resource\": [\"arn:aws:s3:::dermalert/static/*\"]\n    }\n  ]\n}\n</code></pre>"},{"location":"setup/minio/#configuracao-personalizada","title":"Configura\u00e7\u00e3o Personalizada","text":"<pre><code># Em core/minio_utils.py\ndef set_static_prefix_read_only(bucket=None, prefix=\"static/*\"):\n    \"\"\"Configura leitura an\u00f4nima para um prefixo espec\u00edfico\"\"\"\n    # Implementa\u00e7\u00e3o autom\u00e1tica\n</code></pre>"},{"location":"setup/minio/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"setup/minio/#minio-nao-conecta","title":"MinIO n\u00e3o conecta","text":"<pre><code># Verificar se o servi\u00e7o est\u00e1 rodando\ndocker compose -f docker-compose.dev.yml ps\n\n# Ver logs do MinIO\ndocker compose -f docker-compose.dev.yml logs minio\n\n# Reiniciar apenas o MinIO\ndocker compose -f docker-compose.dev.yml restart minio\n</code></pre>"},{"location":"setup/minio/#erro-de-permissao","title":"Erro de permiss\u00e3o","text":"<pre><code># Reconfigurar bucket e pol\u00edticas\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py setup_minio\n\n# Verificar configura\u00e7\u00e3o no MinIO Console\n# http://localhost:9090/buckets/dermalert/admin/summary\n</code></pre>"},{"location":"setup/minio/#bucket-nao-encontrado","title":"Bucket n\u00e3o encontrado","text":"<pre><code># Recriar bucket\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py setup_minio\n\n# Verificar configura\u00e7\u00e3o\ndocker compose -f docker-compose.dev.yml exec dermalert uv run manage.py shell\n</code></pre> <pre><code># No Django shell\nfrom django.conf import settings\nfrom core.minio_utils import bucket_exists, create_bucket_if_not_exists\n\nprint(f\"Bucket: {settings.AWS_STORAGE_BUCKET_NAME}\")\nprint(f\"Endpoint: {settings.AWS_S3_ENDPOINT_URL}\")\nprint(f\"Existe: {bucket_exists(settings.AWS_STORAGE_BUCKET_NAME)}\")\n</code></pre>"},{"location":"setup/minio/#performance-lenta","title":"Performance lenta","text":"<pre><code># Verificar sa\u00fade do MinIO\ndocker compose -f docker-compose.dev.yml exec minio curl -f http://localhost:9000/minio/health/live\n\n# Verificar espa\u00e7o em disco\ndocker compose -f docker-compose.dev.yml exec minio df -h /data\n</code></pre>"},{"location":"setup/minio/#migracao-de-dados","title":"\ud83d\udd04 Migra\u00e7\u00e3o de Dados","text":""},{"location":"setup/minio/#backup-de-bucket","title":"Backup de Bucket","text":"<pre><code># Exportar dados do MinIO\ndocker compose -f docker-compose.dev.yml exec minio mc mirror /data/dermalert /backup/dermalert\n\n# Ou usar mc client\ndocker run --rm -it --network dermalert_default \\\n  -v $(pwd)/backup:/backup \\\n  minio/mc:latest \\\n  mirror minio/dermalert /backup/dermalert\n</code></pre>"},{"location":"setup/minio/#restaurar-backup","title":"Restaurar Backup","text":"<pre><code># Importar dados para MinIO\ndocker compose -f docker-compose.dev.yml exec minio mc mirror /backup/dermalert /data/dermalert\n</code></pre>"},{"location":"setup/minio/#urls-importantes","title":"\ud83c\udf10 URLs Importantes","text":"<ul> <li>MinIO Console: http://localhost:9090/</li> <li>Django Admin: http://localhost:8000/admin/</li> <li>API Docs: http://localhost:8000/api/</li> <li>PostgreSQL: <code>localhost:5432</code> (apenas desenvolvimento)</li> </ul>"},{"location":"setup/minio/#integracao-com-django","title":"\ud83d\udee0\ufe0f Integra\u00e7\u00e3o com Django","text":""},{"location":"setup/minio/#configuracao-em-settingspy","title":"Configura\u00e7\u00e3o em <code>settings.py</code>","text":"<pre><code># Configura\u00e7\u00e3o S3/MinIO\nAWS_ACCESS_KEY_ID       = os.getenv(\"AWS_ACCESS_KEY_ID\", \"minioadmin\")\nAWS_SECRET_ACCESS_KEY   = os.getenv(\"AWS_SECRET_ACCESS_KEY\", \"minioadmin\")\nAWS_S3_ENDPOINT_URL     = os.getenv(\"AWS_S3_ENDPOINT_URL\", \"http://minio:9000\")\nAWS_STORAGE_BUCKET_NAME = os.getenv(\"AWS_STORAGE_BUCKET_NAME\", \"dermalert\")\nAWS_S3_REGION_NAME      = os.getenv(\"AWS_S3_REGION_NAME\", \"us-east-1\")\nAWS_S3_CUSTOM_DOMAIN    = os.getenv(\"AWS_S3_CUSTOM_DOMAIN\", \"localhost:9000\")\nAWS_QUERYSTRING_AUTH    = False\nAWS_DEFAULT_ACL         = \"public-read\"\n\nSTATIC_URL = f\"{AWS_STORAGE_BUCKET_NAME}/static/\"\n</code></pre>"},{"location":"setup/minio/#utilitarios-disponiveis","title":"Utilit\u00e1rios Dispon\u00edveis","text":"<pre><code>from core.minio_utils import (\n    create_minio_client,\n    bucket_exists,\n    create_bucket_if_not_exists,\n    set_static_prefix_read_only,\n    upload_test_file,\n)\n\n# Criar cliente\nclient = create_minio_client()\n\n# Verificar bucket\nif bucket_exists(\"meu-bucket\"):\n    print(\"Bucket existe!\")\n\n# Criar bucket\ncreate_bucket_if_not_exists(\"novo-bucket\")\n\n# Configurar pol\u00edtica\nset_static_prefix_read_only(\"meu-bucket\", \"public/*\")\n\n# Testar upload\nif upload_test_file():\n    print(\"Upload funcionando!\")\n</code></pre>"},{"location":"setup/minio/#proximos-passos","title":"\ud83d\udcda Pr\u00f3ximos Passos","text":"<ol> <li>Configure backup autom\u00e1tico para produ\u00e7\u00e3o</li> <li>Implemente monitoramento de uso de armazenamento</li> <li>Configure CDN para melhor performance</li> <li>Considere usar S3 oficial para produ\u00e7\u00e3o em nuvem</li> <li>Configure lifecycle policies para arquivos antigos</li> </ol>"},{"location":"setup/minio/#casos-de-uso","title":"\ud83c\udfaf Casos de Uso","text":""},{"location":"setup/minio/#upload-de-arquivos","title":"Upload de Arquivos","text":"<pre><code># models.py\nfrom django.db import models\n\nclass SkinImage(models.Model):\n    image = models.ImageField(upload_to='skin_images/')\n    created_at = models.DateTimeField(auto_now_add=True)\n\n    def get_image_url(self):\n        return f\"http://localhost:9000/{settings.AWS_STORAGE_BUCKET_NAME}/{self.image.name}\"\n</code></pre>"},{"location":"setup/minio/#servir-arquivos-estaticos","title":"Servir Arquivos Est\u00e1ticos","text":"<pre><code># settings.py\nSTATIC_URL = f\"http://localhost:9000/{AWS_STORAGE_BUCKET_NAME}/static/\"\nMEDIA_URL = f\"http://localhost:9000/{AWS_STORAGE_BUCKET_NAME}/media/\"\n</code></pre>"},{"location":"setup/minio/#validacao-de-configuracao","title":"Valida\u00e7\u00e3o de Configura\u00e7\u00e3o","text":"<pre><code># views.py\nfrom django.http import JsonResponse\nfrom core.minio_utils import bucket_exists\n\ndef minio_status(request):\n    try:\n        bucket_name = settings.AWS_STORAGE_BUCKET_NAME\n        return JsonResponse({\n            'status': 'ok',\n            'bucket': bucket_name,\n            'exists': bucket_exists(bucket_name),\n            'endpoint': settings.AWS_S3_ENDPOINT_URL\n        })\n    except Exception as e:\n        return JsonResponse({\n            'status': 'error',\n            'message': str(e)\n        })\n</code></pre>"},{"location":"setup/postgres/","title":"Configura\u00e7\u00e3o PostgreSQL - DermAlert Backend","text":"<p>Este documento explica como configurar e usar PostgreSQL em desenvolvimento e produ\u00e7\u00e3o.</p>"},{"location":"setup/postgres/#inicio-rapido","title":"\ud83d\ude80 In\u00edcio R\u00e1pido","text":""},{"location":"setup/postgres/#desenvolvimento","title":"Desenvolvimento","text":"<ol> <li> <p>Instalar depend\u00eancias: <pre><code>uv sync --group dev\n</code></pre></p> </li> <li> <p>Subir os servi\u00e7os (PostgreSQL + MinIO + Django): <pre><code>make dev\n</code></pre></p> </li> <li> <p>Executar migra\u00e7\u00f5es (em outro terminal): <pre><code>make setup-db\n</code></pre></p> </li> </ol>"},{"location":"setup/postgres/#producao","title":"Produ\u00e7\u00e3o","text":"<ol> <li> <p>Configurar vari\u00e1veis de ambiente: <pre><code>cp .env.example .env\n# Editar .env com suas configura\u00e7\u00f5es de produ\u00e7\u00e3o\n</code></pre></p> </li> <li> <p>Subir os servi\u00e7os: <pre><code>make prod\n</code></pre></p> </li> </ol>"},{"location":"setup/postgres/#servicos","title":"\ud83d\udce6 Servi\u00e7os","text":""},{"location":"setup/postgres/#desenvolvimento-docker-composedevyml","title":"Desenvolvimento (<code>docker-compose.dev.yml</code>)","text":"<ul> <li>PostgreSQL: <code>localhost:5432</code></li> <li>MinIO: <code>localhost:9000</code> (Console: <code>localhost:9090</code>)</li> <li>Django: <code>localhost:8000</code></li> </ul>"},{"location":"setup/postgres/#producao-docker-composeyml","title":"Produ\u00e7\u00e3o (<code>docker-compose.yml</code>)","text":"<ul> <li>PostgreSQL: Interno (porta 5432)</li> <li>MinIO: Interno (porta 9000)</li> <li>Django: Atrav\u00e9s do Nginx (porta 80/443)</li> <li>Nginx: <code>localhost:80</code> e <code>localhost:443</code></li> </ul>"},{"location":"setup/postgres/#banco-de-dados","title":"\ud83d\uddc4\ufe0f Banco de Dados","text":""},{"location":"setup/postgres/#configuracao-automatica","title":"Configura\u00e7\u00e3o Autom\u00e1tica","text":"<p>O projeto detecta automaticamente se deve usar PostgreSQL ou SQLite: - PostgreSQL: Se <code>POSTGRES_DB</code> estiver definido no <code>.env</code> - SQLite: Fallback se PostgreSQL n\u00e3o estiver configurado</p>"},{"location":"setup/postgres/#variaveis-de-ambiente","title":"Vari\u00e1veis de Ambiente","text":"<pre><code># PostgreSQL\nPOSTGRES_DB=django_db\nPOSTGRES_USER=django_user\nPOSTGRES_PASSWORD=sua_senha_forte\nPOSTGRES_HOST=postgres  # Nome do servi\u00e7o no Docker\nPOSTGRES_PORT=5432\n</code></pre>"},{"location":"setup/postgres/#comandos-uteis","title":"Comandos \u00dateis","text":"<pre><code># Conectar ao banco via psql\nmake db-shell\n\n# Executar migra\u00e7\u00f5es\nmake migrate\n\n# Shell do Django\nmake shell\n\n# Ver logs do PostgreSQL\ndocker compose -f docker-compose.dev.yml logs postgres\n\n# Backup do banco\ndocker compose -f docker-compose.dev.yml exec postgres pg_dump -U django_user django_db &gt; backup.sql\n\n# Restaurar backup\ndocker compose -f docker-compose.dev.yml exec -T postgres psql -U django_user django_db &lt; backup.sql\n</code></pre>"},{"location":"setup/postgres/#seguranca","title":"\ud83d\udd12 Seguran\u00e7a","text":""},{"location":"setup/postgres/#desenvolvimento_1","title":"Desenvolvimento","text":"<ul> <li>Usar senhas padr\u00e3o (j\u00e1 configuradas)</li> <li>PostgreSQL exposto na porta 5432</li> </ul>"},{"location":"setup/postgres/#producao_1","title":"Produ\u00e7\u00e3o","text":"<ul> <li>SEMPRE alterar senhas padr\u00e3o</li> <li>PostgreSQL n\u00e3o exposto externamente</li> <li>Configurar HTTPS no Nginx</li> <li>Usar senhas fortes e \u00fanicas</li> </ul>"},{"location":"setup/postgres/#exemplo-de-senhas-fortes","title":"Exemplo de senhas fortes:","text":"<pre><code># Gerar senha aleat\u00f3ria\nopenssl rand -base64 32\n</code></pre>"},{"location":"setup/postgres/#troubleshooting","title":"\ud83d\udd27 Troubleshooting","text":""},{"location":"setup/postgres/#postgresql-nao-conecta","title":"PostgreSQL n\u00e3o conecta","text":"<pre><code># Verificar se o servi\u00e7o est\u00e1 rodando\ndocker compose -f docker-compose.dev.yml ps\n\n# Ver logs do PostgreSQL\ndocker compose -f docker-compose.dev.yml logs postgres\n\n# Reiniciar apenas o PostgreSQL\ndocker compose -f docker-compose.dev.yml restart postgres\n</code></pre>"},{"location":"setup/postgres/#erro-de-migracao","title":"Erro de migra\u00e7\u00e3o","text":"<pre><code># Resetar migra\u00e7\u00f5es (CUIDADO: apaga dados!)\ndocker compose -f docker-compose.dev.yml exec postgres psql -U django_user -c \"DROP DATABASE django_db;\"\ndocker compose -f docker-compose.dev.yml exec postgres psql -U django_user -c \"CREATE DATABASE django_db;\"\nmake migrate\n</code></pre>"},{"location":"setup/postgres/#performance","title":"Performance","text":"<pre><code># Verificar conex\u00f5es ativas\ndocker compose -f docker-compose.dev.yml exec postgres psql -U django_user django_db -c \"SELECT * FROM pg_stat_activity;\"\n\n# Verificar tamanho do banco\ndocker compose -f docker-compose.dev.yml exec postgres psql -U django_user django_db -c \"SELECT pg_size_pretty(pg_database_size('django_db'));\"\n</code></pre>"},{"location":"setup/postgres/#urls-importantes","title":"\ud83c\udf10 URLs Importantes","text":"<ul> <li>Django Admin: http://localhost:8000/admin/</li> <li>API Docs: http://localhost:8000/api/</li> <li>MinIO Console: http://localhost:9090/</li> <li>PostgreSQL: <code>localhost:5432</code> (apenas desenvolvimento)</li> </ul>"},{"location":"setup/postgres/#proximos-passos","title":"\ud83d\udcda Pr\u00f3ximos Passos","text":"<ol> <li>Configure backup autom\u00e1tico para produ\u00e7\u00e3o</li> <li>Implemente monitoramento com logs</li> <li>Configure SSL/TLS para HTTPS</li> <li>Considere usar Connection Pooling (PgBouncer)</li> <li>Configure replica\u00e7\u00e3o para alta disponibilidade</li> </ol>"}]}